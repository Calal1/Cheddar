/* Generated by Babel */
/*
 * DEFAULT CONSTANTS
 * List:
  * DIGITS  0-9
  * ALPHA   a-z
  * UALPHA  A-Z
  * MALPHA  A-Za-z
  * NUMERALS 0-9A-F
  * WHTIESPACE \s
  *
  * OP  infix operators
  * UOP unary operators 
  * SYMBOL_FILTER valid characters in operators
  *
  * STRING_DELIMITERS
  *
  * RESERVED reserved token names
**/
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
var DIGITS = "0123456789";
exports.DIGITS = DIGITS;
var ALPHA = "abcdefghijklmnopqrstuvwxyz";
exports.ALPHA = ALPHA;
var UALPHA = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
exports.UALPHA = UALPHA;
var MALPHA = ALPHA + UALPHA;

exports.MALPHA = MALPHA;
var NUMERALS = "0123456789ABCDEF";

exports.NUMERALS = NUMERALS;
var WHITESPACE = "\r\n\t\f ";

exports.WHITESPACE = WHITESPACE;
var TOKEN_START = MALPHA + "$_";
exports.TOKEN_START = TOKEN_START;
var TOKEN_END = TOKEN_START + DIGITS;

exports.TOKEN_END = TOKEN_END;
/*== Operator Constants ==*/

var OP = [['!'], ['^'], ['*', '/', '%'], ['+', '-'], ['<=', '>=', '<', '>'], ['=', '!='], [':=', '+=', '-=', '*=', '/=', '^=']];

exports.OP = OP;
var UOP = [['sqrt', 'cos', 'sin', 'sign'], ['-', '+']];

exports.UOP = UOP;
var SYMBOL_FILTER = "!%&*+-:<=>@^|~";

exports.SYMBOL_FILTER = SYMBOL_FILTER;
/*== Parse Data ==*/
var STRING_DELIMITERS = ['\'', '"'];
exports.STRING_DELIMITERS = STRING_DELIMITERS;
var STRING_ESCAPE = "\\";

exports.STRING_ESCAPE = STRING_ESCAPE;
/*== Conflict Data ==*/
var RESERVED = ['sqrt', 'cos', 'sin', 'sign'];
exports.RESERVED = RESERVED;